package views 

import (
	"fmt"
	"github.com/zaibon/shortcut/components"
	"github.com/zaibon/shortcut/components/icons"
)

type MyLinkPageData struct {
	URLs         []URLStat
	Autoreload   bool
	ShowArchived bool
}

type URLStat struct {
	Title      string
	Slug       string
	Short      string
	Long       string
	IsArchived bool
	CreatedAt  string
}

func toggle(b bool) string {
	return fmt.Sprintf("/statistics?autoreload=%v", !b)
}

func title(b bool) string {
	if b {
		return "My archived links"
	}
	return "My links"
}

templ MyLinksPage(data MyLinkPageData) {
	@Layout() {
		<div
			class="grow flex flex-col bg-gray-100 p-4"
		>
			<div class="flex flex-row pt-4 pl-16 mb-4">
				<div class="flex flex-row gap-x-2">
					<h1 class="text-2xl font-extrabold">{ title(data.ShowArchived) }</h1>
					<a href="/">
						@components.Button(components.ButtonProp{
							Type:     "text",
							WithIcon: true,
							Class:    "text-white text-cyan-700 bg-cyan-700 hover:bg-cyan-600",
						}) {
							@icons.CirclePlus(icons.IconProp{
								Size:  18,
								Class: "text-white",
							})
							<span class="ml-1">Create</span>
						}
					</a>
					@components.Toggle(components.ToggleProp{
						Label:     "Show archived",
						IsChecked: data.ShowArchived,
						ID:        "toggle-archived",
					})
				</div>
			</div>
			<div id="list-links" class="flex flex-col lg:grid lg:grid-flow-row lg:grid-cols-3 lg:grid-rows-3 lg:gap-10">
				for _, url:= range data.URLs {
					@components.LinkCard(components.LinkCardData{
						Title:      url.Title,
						Short:      url.Short,
						Long:       url.Long,
						CreatedAt:  url.CreatedAt,
						Slug:       url.Slug,
						IsArchived: url.IsArchived,
					})
				}
			</div>
		</div>
	}
}
