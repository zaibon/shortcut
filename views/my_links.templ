package views 

import "fmt"
import "github.com/zaibon/shortcut/components"
import "github.com/zaibon/shortcut/components/icons"

type MyLinkPageData struct {
	URLs       []URLStat
	Autoreload bool
}

type URLStat struct {
	Title     string
	Slug      string
	Short     string
	Long      string
	CreatedAt string
}

func toggle(b bool) string {
	return fmt.Sprintf("/statistics?autoreload=%v", !b)
}

templ MyLinksPage(data MyLinkPageData) {
	@Layout() {
		<div
			class="grow flex flex-col bg-gray-100"
		>
			<div class="flex flex-row pt-4 pl-16 gap-x-2">
				<h1 class="text-2xl font-extrabold">My links</h1>
				<a href="/">
					@components.Button(components.ButtonProp{
						Type:     "text",
						WithIcon: true,
						Class:    "text-white text-cyan-700 bg-cyan-700 hover:bg-cyan-600 px-5 py-2.5 font-medium",
					}) {
						@icons.CirclePlus(icons.IconProp{
							Size:  18,
							Class: "text-white",
						})
						<span class="ml-1">Create</span>
					}
				</a>
				<button id="dropdownDefaultButton" data-dropdown-toggle="dropdown" class="text-white bg-cyan-700 hover:bg-cyan-800 font-medium rounded-lg px-5 py-2.5 text-center inline-flex items-center" type="button">
					Sort by 
					<svg class="w-2.5 h-2.5 ms-3" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 10 6">
						<path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 1 4 4 4-4"></path>
					</svg>
				</button>
				<!-- Dropdown menu -->
				<div id="dropdown" class="z-10 hidden bg-white divide-y divide-gray-100 rounded-lg shadow w-44 dark:bg-gray-700">
					<ul class="py-2 text-sm text-gray-700 dark:text-gray-200" aria-labelledby="dropdownDefaultButton">
						<li>
							<a href={ sortByURL("created_at", "desc") } class="block px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white">Creation date</a>
						</li>
						<li>
							<a href={ sortByURL("title", "asc") } class="block px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white">Title</a>
						</li>
					</ul>
				</div>
			</div>
			<div class="flex flex-col lg:grid lg:grid-flow-row lg:grid-cols-3 lg:grid-rows-3">
				for _, url:= range data.URLs {
					@components.LinkCard(components.LinkCardData{
						Title:     url.Title,
						Short:     url.Short,
						Long:      url.Long,
						CreatedAt: url.CreatedAt,
						Slug:      url.Slug,
					})
				}
			</div>
		</div>
	}
}

func sortByURL(by, dir string) templ.SafeURL {
	return templ.URL(fmt.Sprintf("/links?sort_by=%s&sort_dir=%s", by, dir))
}
