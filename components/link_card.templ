package components

import (
	"fmt"
	"github.com/zaibon/shortcut/components/icons"
	"strings"
)

type LinkCardData struct {
	Title     string
	Slug      string
	Long      string
	Short     string
	CreatedAt string
}

templ LinkCard(data LinkCardData) {
	<div class="grow flex flex-col items-center bg-white border border-gray-200 rounded-lg shadow md:flex-row hover:bg-gray-100">
		<div class="flex flex-col justify-between px-4 py-2 w-full">
			@TitleDetail(data.Title, data.Slug)
			<a href={ templ.URL(data.Short) } target="_blank" rel="noopener noreferrer" class="mb-2 text-base font-normal text-blue-600 hover:underline">
				{ data.Short }
			</a>
			<a href={ templ.URL(data.Long) } target="_blank" rel="noopener noreferrer" class="mb-3 text-sm font-normal text-gray-500 text-ellipsis overflow-hidden hover:underline">
				{ data.Long }
			</a>
			<div class="flex flex-row justify-between mt-4">
				<div class="flex flex-row gap-x-1">
					@icons.Calendar(icons.IconProp{Size: 18})
					<span class="text-sm">{ data.CreatedAt }</span>
				</div>
				<div class="flex flex-row gap-x-1">
					@icons.ChartMixed(icons.IconProp{Size: 18})
					<span class="text-sm" hx-get={ fmt.Sprintf("/statistics/clicks/%s", data.Slug) } hx-trigger="revealed, every 60s">>...</span>
				</div>
			</div>
		</div>
	</div>
}

templ LinkDetailCard(data LinkCardData) {
	<div class="h-full grow flex flex-col bg-white md:flex-row">
		<div class="flex flex-col justify-between px-4 py-2 w-full">
			<div class="flex flex-col">
				@TitleDetail(data.Title, data.Slug)
				<a href={ templ.URL(data.Short) } target="_blank" rel="noopener noreferrer" class="mb-2 text-base font-normal text-blue-600 hover:underline">{ data.Short }</a>
				<a href={ templ.URL(data.Long) } target="_blank" rel="noopener noreferrer" class="mb-3 text-sm font-normal text-gray-500 text-ellipsis overflow-hidden hover:underline">{ data.Long }</a>
			</div>
			<div class="flex flex-row justify-between mt-4">
				<div class="flex flex-row gap-x-1">
					@icons.Calendar(icons.IconProp{Size: 18})
					<span class="text-sm">{ data.CreatedAt }</span>
				</div>
				<div class="flex flex-row gap-x-1">
					@icons.ChartMixed(icons.IconProp{Size: 18})
					<span class="text-sm" hx-get={ fmt.Sprintf("/statistics/clicks/%s", data.Slug) } hx-trigger="revealed, every 60s">>...</span>
				</div>
			</div>
		</div>
	</div>
}

templ TitleDetail(title, slug string) {
	<div class="flex flex-row justify-between" hx-target="this" hx-swap="outerHTML">
		<h3 class="mb-2 text-xl font-bold tracking-tight text-gray-900">{ strings.TrimSpace( title) }</h3>
		<button hx-get={ fmt.Sprintf("/links/%s/edit", slug) }>
			@icons.Edit(icons.IconProp{
				Size:  18,
				Class: "text-cyan-800 dark:text-white",
			})
		</button>
	</div>
}

templ EditTitleForm(title, slug string) {
	<form
		class="flex flex-row justify-between"
		id="edit-title-form"
		hx-patch={ fmt.Sprintf("/links/%s", slug) }
		hx-swap="outerHTML"
	>
		@InputText(InputTextProp{
			Name:     "title",
			Value:    title,
			Required: true,
		}, templ.Attributes{
			"class":     "mb-2 text-xl font-bold tracking-tight text-gray-900 w-96",
			"autofocus": true,
		})
		<button type="submit">
			@icons.Check(icons.IconProp{
				Size:  18,
				Class: "text-cyan-800 dark:text-white align-text-top",
			})
		</button>
	</form>
}
