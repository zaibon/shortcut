package components

type InputTextProp struct {
	Type        string
	Name        string
	Label       string
	Value       string
	PlaceHolder string
	Required    bool
	Error       error
	Disabled    bool
}

templ InputText(prop InputTextProp, attrs ...templ.Attributes) {
	<div>
		if prop.Label != "" {
			<label for={ prop.Name } class="block mb-2 text-sm font-medium text-gray-900">
				{ prop.Label }
			</label>
		}
		<input
			type={ prop.Type }
			id={ prop.Name }
			name={ prop.Name }
			if !hasClass(attrs...) {
				class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5"
			}
			if prop.PlaceHolder!="" {
				placeholder={ prop.PlaceHolder }
			}
			required?={ prop.Required }
			disabled?={ prop.Disabled }
			if prop.Value!="" {
				value={ prop.Value }
			}
			if len(attrs) > 0 {
				{ attrs[0]... }
			}
		/>
		if prop.Error != nil {
			<p class="mt-2 text-sm text-red-600">
				<span class="font-medium">{ prop.Error.Error() }</span>
			</p>
		}
	</div>
}

func hasClass(attrs ...templ.Attributes) bool {
	if len(attrs) <= 0 {
		return false
	}
	if _, ok := attrs[0]["class"]; ok {
		return true
	}
	return false
}
